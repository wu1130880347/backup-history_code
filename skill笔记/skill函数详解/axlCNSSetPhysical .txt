更新physical集的值
  NAME
    axlCNSSetPhysical - update physicalcset values
  SYNOPSIS
    axlCNSSetPhysical(
         t_cset/nil
         t_layer/nil
         s_constraint
         g_value
         )
         ==> t/nil
    axlCNSSetPhysical(
         t_cset/nil
         t_layer/nil
         ll_constraintValues
         nil
         )
         ==> t/nil
  FUNCTION
         Allows updating physicalconstraint values. By passing nil at
         the appropriate argumentvalues for all csets and all layers may be
         changed.
  DATA TYPES
         See axlCNSGetPhysical for the data type of each constraint.
         << units and allowed data values>>     
         Design Units:
            - A number (integer or floating point) where units
                 is current designunits. Must not exceedaccuracy
                 of the design.
            - Unitless string where accuracy cannotexceed db accuracy.
            - String with units, data converted tocurrent design units.
         Boolean
            - Use t/nil or "true"/"false".
         Symbol
            - Use the symbol name or its string.
  TIPS
         1) For best performance, when calling updatingmultiple axlCNS
            values wrap them in theaxlCnsMap interfaces as shown below:
                 axlCNSMapClear()
                 axlCNSSetPhysical(nil nil 'width_min 5)
                 axlCNSSetPhysical("" nil 'allow_padconnect'VIAS_PINS_ONLY)
                 ...
                 axlCNSMapUpdate()
            Single change calls do not require this.
         2) For list of physical constraints see axlCNSGetPhysical.
         3) If adding/deleting individual vias, you may find iteasier
            to use axlCnsAddVia and axlCnsDeleteVia.
  CAUTION
         1) same_net behavior will change in 16.2
         2) This does NOT change overridevalues. For example, you
            can set width_min value inall csets but if theuser has
            applied it to a net or constraint area asan override, it
            will still be used for those items.
  NEEDS
         t_cset: cset name, can use "" for DEFAULT cset. Use nil to apply
                 change to all cset.
         t_layer: ETCH layer name (e.g "ETCH/TOP" or "TOP"). If nil apply
                 change to alllayers.
         s_contraint: Constraintsymbol to change. Use
                 axlCNSGetPhysical(nil nil nil) for list of permissible
                 values.
         g_value: Value to update.For data type see above for "DATATYPES".
         ll_constraintValues:Multiple values may be updated by passing
                 a list of lists for the third argument.
                         '((s_contraint g_value) ... )
  RETURNS
         t if succeeds
         nil an error
                 - ecset name does not exit
                 - layer does not exist
                 - contraint does not exist
                 - illegal value for constraint
                 - cset is locked
  SEE ALSO
         axlCNSGetPhysical, axlCNSMapClear, axlCNSMapUpdate
         axlCnsAddVia, axlCnsDeleteVia
  EXAMPLES
         - Set min line width on allconstraints and layers
             axlCNSSetPhysical(nil nil 'width_min 5)
         - Set allow etch on alllayers in default cset
             axlCNSSetPhysical("" nil 'allow_etch t)
         - don't allow Ts on toplayer of VOLTAGE cset
             axlCNSSetPhysical("VOLTAGE" "top" 'allow_ts "NOT_ALLOWED")
         - same use symbol for value
             axlCNSSetPhysical("VOLTAGE" "top" 'allow_ts'NOT_ALLOWED)